create DATABASE AmazonDatabase_practise2
GO
Use AmazonDatabase_practise2
GO

CREATE PROCEDURE spGetProductsByStartingLetter
@ProductName varchar(255)
AS
BEGIN
Select ProductName from Products 
where  ProductName like @ProductName + '_%' 
END
GO

Create PROCEDURE spGetTotalPriceOfProductsByCustomerId
@CustomerId INT
AS 
BEGIN
Select CustomerId, SUM(Price * Quantity) as TotalPrice from Invoice
where CustomerId = @CustomerId
group by CustomerId 
END
GO

CREATE Procedure spGetProductsPaidByCash
AS
BEGIN
Select ProductId, Quantity, Price, PaymentMethod from Invoice 
join Payment
on Invoice.InvoiceId= Payment.InvoiceId
where PaymentMethod = 'Cash'
END
GO


Create Table Customer(
CustomerId int NOT NULL PRIMARY KEY, 
FirstName nvarchar(50) NOT NULL,
LastName nvarchar(50) NOT NULL,
Gender nvarchar(20) NOT NULL,
Email nvarchar(100) NOT NULL,
City nvarchar(100) NOT NULL,
State nvarchar(100) NOT NULL,
Country nvarchar(100) NOT NULL,
UserName nvarchar(50) NOT NULL,
Password nvarchar(255) NOT NULL,
ForgotPassword Bit DEFAULT 0 ,
);


CREATE TABLE Products (
ProductId int NOT NULL PRIMARY KEY,
ProductName nvarchar(255) NOT NULL,
ProductType nvarchar(255) NOT NULL,
ProductCount int NOT NULL,
ProductColor nvarchar(255) NOT NULL,
ProductSize nvarchar(50) NOT NULL,
ProductPrice int  NOT NULL
);

Create table Invoice (
InvoiceId int NOT NULL PRIMARY KEY,
CustomerId int,
ProductId Int,
Quantity Int NOT NULL, 
Price int NOT NULL,
OrderStatus char(50) NOT NULL,
);

Create Table Payment(
PaymentId int NOT NULL PRIMARY KEY,
InvoiceId Int,
PaymentMethod nvarchar(255) NOT NULL,
Amount int NOT NULL,
);


ALTER TABLE Invoice
ADD FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId);

ALTER TABLE Invoice
ADD FOREIGN KEY (ProductId) REFERENCES Products(ProductId);

ALTER TABLE Payment
ADD FOREIGN KEY (InvoiceId) REFERENCES Invoice(InvoiceId);


INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (1, 'Akshaya', 'Sekar', 'Female', 'Aksh3@gmail.com', 'Chennai', 'Tamil Nadu', 'India', 'akshzzash' ,'akshbahs', 0);
INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (2, 'Adithya', 'Kiran', 'Male' ,'Adi63@gmail.com', 'Chennai', 'Tamil Nadu', 'India', 'adithezzash', 'adithecool', 0);
INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (3, 'Dhivya', 'Mohan', 'Female' ,'Dhiv77@gmail.com', 'Chennai', 'Tamil Nadu', 'India', 'dhiv33zzash' ,'zycabcd', 0);
INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (4, 'Padma', 'Sekar', 'Female' ,'Pads22@gmail.com', 'Chennai', 'Tamil Nadu', 'India', 'Padsekar', 'mommyoftwo' ,0);
INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (5, 'Sekar', 'Veeresan', 'Male', 'Sekardoc@yahoo.com', 'Banglore', 'Karnataka', 'India', 'doctorsekar' ,'daddycool',0);
INSERT INTO Customer(CustomerId, FirstName, LastName, Gender, Email, City, State, Country, UserName, Password, ForgotPassword)
VALUES (6, 'Dani', 'Suzz', 'Female' ,'Danimental@gmail.com', 'Kochi', 'Kerela', 'India', 'Danidani', 'danibae', 0);

INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (1, 'Adidas Shoe', 'Footwear', 343335, 'Black', 'L', 3000);
INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (2, 'Nike Shoe', 'Footwear', 3435, 'Blue', 'S', 4500);
INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (3, 'Superdry Jacket', 'Jackets', 8999, 'Pink', 'L', 2000);
INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (4, 'Superdry Flipflops', 'Footwear', 34, 'Black', 'M', 899);
INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (5, 'Chain', 'Accessories', 2990, 'Gold', 'Nil', 30000);
INSERT INTO Products ( ProductId, ProductName, ProductType, ProductCount, ProductColor, ProductSize, ProductPrice)
VALUES (6, 'Titan Watch', 'Watches', 244, 'RoseGold', 'Nil', 25000);

INSERT INTO Invoice (InvoiceId, CustomerId, ProductId, Quantity, Price, OrderStatus)
VALUES ( 1, 3, 4, 1, 30000, 'In Progress');
INSERT INTO Invoice (InvoiceId, CustomerId, ProductId, Quantity, Price, OrderStatus)
VALUES ( 2, 4, 1, 2, 6000, 'In Progress');
INSERT INTO Invoice (InvoiceId, CustomerId, ProductId, Quantity, Price,  OrderStatus)
VALUES ( 3, 1, 2, 1, 4500, 'Delivered');
INSERT INTO Invoice (InvoiceId, CustomerId, ProductId, Quantity, Price, OrderStatus)
VALUES ( 4, 1, 3, 2, 2000, 'In Progress');
INSERT INTO Invoice (InvoiceId, CustomerId, ProductId, Quantity, Price, OrderStatus)
VALUES ( 5, 2, 3, 3, 6000, 'Delivered');


INSERT INTO Payment(PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (1, 2, 'Creditcard', 3000);
INSERT INTO Payment(PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (2, 1, 'Cash', 4700);
INSERT INTO Payment(PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (3, 3, 'Cash', 4000);
INSERT INTO Payment (PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (4, 5, 'DebitCard', 40000);
INSERT INTO Payment (PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (5, 1, 'CreditCard', 600);
INSERT INTO Payment (PaymentId, InvoiceId, PaymentMethod, Amount)
VALUES (6, 1, 'CreditCard', 25000);


Select * from Customer
Select * from Products
Select * from Invoice
Select * from Payment

Execute spGetProductsByStartingLetter S

Execute spGetTotalPriceOfProductsByCustomerId 1

Execute spGetProductsPaidByCash
